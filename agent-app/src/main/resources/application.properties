server.ssl.key-store-type=JKS
server.ssl.key-store=src/main/resources/ftn.jks
server.ssl.key-store-password=password
server.ssl.key-alias=www.ftn.prni.com
server.ssl.enabled=true
server.port = 8091
security.require-ssl=true

#Spring DataSource drajver koji \u0107e se koristiti za komunikaciju aplikacije sa bazom
spring.datasource.driverClassName=org.postgresql.Driver

#Navodi se baza koja se koristi
spring.datasource.platform=postgres

#Navodi se URL do baze koja je pokrenuta u lokalu na podrazumevanom portu 5432 i na serveru je kreirana \u0161ema baze pod nazivom "jpa"
#https://www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (ako koristimo Hibernate za kreiranje tabela, SQL deo sa linka nije potreban)
spring.datasource.url=${DB_PATH:jdbc:postgresql://localhost:5432/agent_app}

#Navode se kredencijali za konekciju na server baze
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:1111}

#Umesto da sami pi\u0161emo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako \u017Eelimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji \u0107e Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = ${DB_AUTO_DDL:create-drop}

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

client.activity = http://${ACTIVITY_HOST:localhost}:8086/api/activity/
client.campaign = http://${CAMPAIGN_HOST:localhost}:8087/api/campaign/
client.auth = http://${AUTH_HOST:localhost}:8081/api/auth/
client.media = http://${MEDIA_HOST:localhost}:8085/api/media/
client.report = http://${REPORT_HOST:localhost}:8092/api/report/


